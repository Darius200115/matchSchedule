{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nlet AuthService = class AuthService {\n  constructor(http, router, location) {\n    this.http = http;\n    this.router = router;\n    this.location = location;\n    this.baseUrl = 'https://localhost:7145/api/User/';\n    this.userPayload = this.decodedToken();\n  }\n  signUp(userObj) {\n    return this.http.post(`${this.baseUrl}register`, userObj);\n  }\n  signOut() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/']);\n    this.location.reload();\n  }\n  login(loginObj) {\n    return this.http.post(`${this.baseUrl}authenticate`, loginObj);\n  }\n  storeToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn() {\n    return !!localStorage.getItem('token');\n  }\n  decodedToken() {\n    const jwtHelper = new JwtHelperService();\n    const token = this.getToken();\n    return jwtHelper.decodeToken(token);\n  }\n  getFullNameFromToken() {\n    if (this.userPayload) return this.userPayload.name;\n  }\n  getRoleFromToken() {\n    if (this.userPayload) return this.userPayload.role;\n  }\n};\nAuthService = __decorate([Injectable({\n  providedIn: 'root'\n})], AuthService);\nexport { AuthService };","map":{"version":3,"names":["Injectable","JwtHelperService","AuthService","constructor","http","router","location","baseUrl","userPayload","decodedToken","signUp","userObj","post","signOut","localStorage","removeItem","navigate","reload","login","loginObj","storeToken","token","setItem","getToken","getItem","isLoggedIn","jwtHelper","decodeToken","getFullNameFromToken","name","getRoleFromToken","role","__decorate","providedIn"],"sources":["C:\\Users\\svenp\\source\\repos\\Darius200115\\matchSchedule\\matchSchedule\\ClientApp\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  private baseUrl: string = 'https://localhost:7145/api/User/';\n  private userPayload: any;\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private location: \n  ) {\n    this.userPayload = this.decodedToken();\n  }\n\n  signUp(userObj: any) {\n    return this.http.post<any>(`${this.baseUrl}register`, userObj);\n  }\n\n  signOut() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/']);\n    this.location.reload();\n  }\n\n  login(loginObj: any) {\n    return this.http.post<any>(`${this.baseUrl}authenticate`, loginObj);\n  }\n\n  storeToken(token: string) {\n    localStorage.setItem('token', token);\n  }\n\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  isLoggedIn(): boolean {\n    return !!localStorage.getItem('token');\n  }\n\n  decodedToken() {\n    const jwtHelper = new JwtHelperService();\n    const token = this.getToken()!;\n    return jwtHelper.decodeToken(token);\n  }\n\n  getFullNameFromToken() {\n    if (this.userPayload) return this.userPayload.name;\n  }\n\n  getRoleFromToken() {\n    if (this.userPayload) return this.userPayload.role;\n  }\n}\n"],"mappings":";AACA,SAASA,UAAU,QAAQ,eAAe;AAE1C,SAASC,gBAAgB,QAAQ,oBAAoB;AAK9C,IAAMC,WAAW,GAAjB,MAAMA,WAAW;EAGtBC,YACUC,IAAgB,EAChBC,MAAc,EACdC,QAAS;IAFT,KAAAF,IAAI,GAAJA,IAAI;IACJ,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,QAAQ,GAARA,QAAQ;IALV,KAAAC,OAAO,GAAW,kCAAkC;IAO1D,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,YAAY,EAAE;EACxC;EAEAC,MAAMA,CAACC,OAAY;IACjB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACL,OAAO,UAAU,EAAEI,OAAO,CAAC;EAChE;EAEAE,OAAOA,CAAA;IACLC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3B,IAAI,CAACV,QAAQ,CAACW,MAAM,EAAE;EACxB;EAEAC,KAAKA,CAACC,QAAa;IACjB,OAAO,IAAI,CAACf,IAAI,CAACQ,IAAI,CAAM,GAAG,IAAI,CAACL,OAAO,cAAc,EAAEY,QAAQ,CAAC;EACrE;EAEAC,UAAUA,CAACC,KAAa;IACtBP,YAAY,CAACQ,OAAO,CAAC,OAAO,EAAED,KAAK,CAAC;EACtC;EAEAE,QAAQA,CAAA;IACN,OAAOT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,UAAUA,CAAA;IACR,OAAO,CAAC,CAACX,YAAY,CAACU,OAAO,CAAC,OAAO,CAAC;EACxC;EAEAf,YAAYA,CAAA;IACV,MAAMiB,SAAS,GAAG,IAAIzB,gBAAgB,EAAE;IACxC,MAAMoB,KAAK,GAAG,IAAI,CAACE,QAAQ,EAAG;IAC9B,OAAOG,SAAS,CAACC,WAAW,CAACN,KAAK,CAAC;EACrC;EAEAO,oBAAoBA,CAAA;IAClB,IAAI,IAAI,CAACpB,WAAW,EAAE,OAAO,IAAI,CAACA,WAAW,CAACqB,IAAI;EACpD;EAEAC,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACtB,WAAW,EAAE,OAAO,IAAI,CAACA,WAAW,CAACuB,IAAI;EACpD;CACD;AAlDY7B,WAAW,GAAA8B,UAAA,EAHvBhC,UAAU,CAAC;EACViC,UAAU,EAAE;CACb,CAAC,C,EACW/B,WAAW,CAkDvB;SAlDYA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}